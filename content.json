{"meta":{"title":"JM","subtitle":null,"description":"这个家伙很懒，什么都没留下","author":"JM","url":"http://blog.jmtung.cn"},"pages":[{"title":"categories","date":"2018-02-10T10:17:42.000Z","updated":"2018-02-10T10:18:08.509Z","comments":true,"path":"categories/index.html","permalink":"http://blog.jmtung.cn/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-02-10T09:58:19.000Z","updated":"2018-02-10T10:01:17.283Z","comments":true,"path":"tags/index.html","permalink":"http://blog.jmtung.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"test","slug":"test","date":"2018-04-10T15:16:25.000Z","updated":"2018-04-10T15:16:25.175Z","comments":true,"path":"2018/04/10/test/","link":"","permalink":"http://blog.jmtung.cn/2018/04/10/test/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"php静态属性的继承","slug":"php静态属性的继承","date":"2017-08-31T13:13:55.000Z","updated":"2018-02-10T13:19:14.245Z","comments":true,"path":"2017/08/31/php静态属性的继承/","link":"","permalink":"http://blog.jmtung.cn/2017/08/31/php静态属性的继承/","excerpt":"","text":"若子类没有重写父类的静态属性,子类对静态属性的改动都会影响其父类和其他子类的静态属性 12345678910111213141516171819202122232425262728293031&lt;?phpclass StaticVariableInheritance&#123; protected static $instance; public static function setInstance($ins) &#123; static::$instance = $ins; &#125; public static function getInstance() &#123; return static::$instance; &#125;&#125;class Sub1 extends StaticVariableInheritance &#123;&#125;//--------------------------子类的静态属性会影响父类的静态属性--------------------------//Sub1::setInstance('jm');echo StaticVariableInheritance::getInstance().\"\\n\";// jmecho Sub1::getInstance().\"\\n\";// jm//--------------------------子类的静态属性也会影响其他子类的静态属性--------------------------//class Sub2 extends StaticVariableInheritance&#123;&#125;Sub2::setInstance('jmtung');echo StaticVariableInheritance::getInstance().\"\\n\";// jmtungecho Sub1::getInstance().\"\\n\";// jmtungecho Sub2::getInstance().\"\\n\";// jmtung 若子类重写了父类的静态属性,该静态属性只属于当前类,对父类或其他子类没有影响 12345678910111213141516171819202122232425262728293031&lt;?phpclass StaticVariableInheritance&#123; protected static $instance; public static function setInstance($ins) &#123; static::$instance = $ins; &#125; public static function getInstance() &#123; return static::$instance; &#125;&#125;class Sub1 extends StaticVariableInheritance &#123; protected static $instance;&#125;Sub1::setInstance('jm');echo StaticVariableInheritance::getInstance().\"\\n\";// jmecho Sub1::getInstance().\"\\n\";// nullclass Sub2 extends StaticVariableInheritance&#123; protected static $instance;&#125;Sub2::setInstance('jmtung');echo StaticVariableInheritance::getInstance().\"\\n\";// jmecho Sub1::getInstance().\"\\n\";// jmtungecho Sub2::getInstance().\"\\n\";// null","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://blog.jmtung.cn/tags/php/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-01-20T13:16:20.000Z","updated":"2018-02-10T13:20:37.383Z","comments":true,"path":"2017/01/20/hello-world/","link":"","permalink":"http://blog.jmtung.cn/2017/01/20/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}