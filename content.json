{"meta":{"title":"翠竹凝梦","subtitle":null,"description":"翠竹凝梦,blog,JM,php,博客,技术,生活","author":"Jimmy","url":"http://blog.jmtung.cn"},"pages":[{"title":"tags","date":"2018-02-10T09:58:19.000Z","updated":"2018-02-10T10:01:17.283Z","comments":true,"path":"tags/index.html","permalink":"http://blog.jmtung.cn/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-02-10T10:17:42.000Z","updated":"2018-02-10T10:18:08.510Z","comments":true,"path":"categories/index.html","permalink":"http://blog.jmtung.cn/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"trim过滤不掉的空白字符","slug":"trim过滤不掉的空白字符","date":"2019-07-04T15:38:27.000Z","updated":"2019-07-04T16:40:18.664Z","comments":true,"path":"2019/07/04/trim过滤不掉的空白字符/","link":"","permalink":"http://blog.jmtung.cn/2019/07/04/trim过滤不掉的空白字符/","excerpt":"","text":"上两周老大丢个bug过来：过滤学生名单学生名字两侧的空格。我就想还有trim搞不定的空白符吗，吓得我赶紧翻下trim的说明书： 此函数返回字符串 str 去除首尾空白字符后的结果。如果不指定第二个参数，trim() 将去除这些字符： “ “ (ASCII 32 (0x20))，普通空格符。 “\\t” (ASCII 9 (0x09))，制表符。 “\\n” (ASCII 10 (0x0A))，换行符。 “\\r” (ASCII 13 (0x0D))，回车符。 “\\0” (ASCII 0 (0x00))，空字节符。 “\\x0B” (ASCII 11 (0x0B))，垂直制表符。 哦嚯，难道除了上面这些，还有别的空白符？骚年，这世界这么大，你不知道的事多得很呢。随后老大又丢个参考文章给我，看了下还行，整理下大概解决思路。 简单点的方法如果只是想过滤某个特殊空白字符如” abc “，只需把两侧的特殊空白字符复制一下，用str_replace函数换掉就完事了。 通用点的方法或者说我们可以写个trim的加强版，把遇到的特殊空白字符也过滤掉。 找出空白字符拿” abcabc”为例，先用str_split函数将字符串按字节分割成一个字节数组，打印整个数组，观察每个字节的ASCII码。 12345678910111213$str = \" abcabc\";$arr = str_split($str);foreach($arr as $byte)&#123; var_dump(ord($byte));&#125;// int(194)// int(160)// int(97)// int(98)// int(99)// int(97)// int(98)// int(99) 由于’a’的ASCII码为97，不易看出，ASCII为194+160的组合构成了这个特殊空白字符 去除空白字符确定了空白字符对应ASCII码后，我们很容易地定位编写正则过滤相关字符： 1preg_replace(\"/^[\\s\\v\".chr(194).chr(160).\"]+/\",\"\", $str); 当然我们可以编写一个更为通用的方法扩展更多的特殊空白符 1234567891011121314151617function trimPlus($strContent)&#123; // 特殊字符列表 $arrCase = array( chr(226) . chr(128) . chr(131), // 全角空格 chr(226) . chr(128) . chr(130), // 半角空格 chr(194) . chr(160), // utf-8的特殊空白字符 // ...后面有更多特殊空白符继续添加 ); $strEmpty=implode('|',$arrCase); $strContent = preg_replace(\"/^(\\s|\\v|$strEmpty)+/\", \"\", $strContent); $strContent = preg_replace(\"/(\\s|\\v|$strEmpty)+$/\", \"\", $strContent); return $strContent;&#125;","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://blog.jmtung.cn/tags/php/"}]},{"title":"这四年","slug":"这四年","date":"2019-06-21T13:56:02.000Z","updated":"2019-06-29T15:33:49.256Z","comments":true,"path":"2019/06/21/这四年/","link":"","permalink":"http://blog.jmtung.cn/2019/06/21/这四年/","excerpt":"忙完毕设，有点空闲时间了，这四年挺快的，想想过得挺糟糕呢，记录下来吧，也算是对大学的一个总结。希望几年后的自己看到这篇东西能有所感触。","text":"忙完毕设，有点空闲时间了，这四年挺快的，想想过得挺糟糕呢，记录下来吧，也算是对大学的一个总结。希望几年后的自己看到这篇东西能有所感触。 欢愉的时光 我觉得快乐主要有两种途径获得： 一种是直接在物质上或者精神上得到了某样东西，譬如拿着刚发的工资买了你看上的鞋子，或者你获得了某些人的赞美或认可，这种快乐很容易让你满足也很容易让你得到，但却是短暂的，可能刚开始你会乐一下，过段时间这种愉悦的感觉会慢慢消失殆尽。这种快乐有太多太多，数都数不过来。像跟木杰开黑玩套路坑队友，不在乎输赢，欢乐就行；抑或者无意中逗笑喜欢的人；到了一个从未来过的城市，体验体验这里的风土人情；第一次发工资；拿着工资买个大蛋糕给老妈过生日；跟果冻讲述着前三年经历的故事，有如他也在场一般等等。短暂而又美好。 一种是创作带来的乐趣，譬如你敲了两个月的软件上线投入使用了，看着线上用户慢慢增加便是一个非常愉快享受的过程，每每回想创作过程的艰辛和最终带来的成就，你的满足感会爆满，而且是源源不断的。非常享受在东湖练琴的时光，每到傍晚时分悄悄到学校后花园找个没人的角落，回忆着在蓝网看的教学，从单音练起，到爬音阶，再到后面单曲练习，第一次完整吹出《爱尔兰画眉》和《送别》时，有种喜当爹的感觉。然而好景不长，暑假后花园入口被封了，mmp。 遗憾 遗憾总是有的，但未免也太多了。 曾几何时我也有被人喜欢的时候，奈何给我机会我不中用啊，没把握住。待我后知后觉之时伊人已不在，追悔莫及。没啥好说的，祝君好。 对专业的课程没有好好的学习，学校很多老师挺水的，于是乎(理所当然地)逃了不少课，去学web开发，看着一些培训视频和慕课网的视频一点点擼，不怎么注重基础知识，没有对计算机科班基础课程进行一个系统的学习，考试只是混个及格，自以为单能敲几个页面就能找份好工作了。直到后来临近春招时发现我错了，看着牛客上面一道道笔试题和面经，全是操作系统、计网、数据库原理相关的问题，有点小崩溃，咋办？补啊！操作系统看清华那套，算法看慕课liuyubobo那个系列，计网看哈工大的。直到现在其实觉得基础还是不太稳固，买了CSAPP和高性能MySQL，有空就看看补补细节吧。到了现在的公司跟同事交流，大学做的那几个作品其实没有多大的意义，单纯玩耍拿不上台面的。自己挖的坑也要填完呐。 还有创客空间，这个是这四年不可或缺的一部分，在这里结识了几位大学里面最好的朋友，技术上得到了提升，甚至这是可以说是我技术成长最快的一段时间，也曾因种种原因一度产生离开的想法，但终究还是待下来了。直到大三接到要倒闭的通知，怪可惜的，少了一群人黑我大PHP，那些中午一起恰饭吹牛逼的日子，也不会再有了。 接了两个很失败的项目。一个跟硬件跟蓝牙打交道，调试烦死人还要跟硬件老哥讲道理，项目无限延期最后翻车，搞的东西有点偏门，没学到什么，花大半年搞出一个不安全且架构糟糕的应用，还浪费了这么多时间在上面，即使有补贴也是血亏，时间永远是最珍贵的。上个项目终结后又被拉进另一个坑，上个项目至少有个需求文档，而后面接的连个较为准确一点的需求都没，玩到一半越来越不对路，走了，不能重蹈覆辙再浪费时间了。虽然当时觉得接个项目能赚点生活费还能申报个项目什么的，但现在看来都错了，除了财政上获益些许，并没有收获太多。要把时间浪费在美好的事物上啊。 大学的一个目标是保持健康的体质，长胖。然而现实跟理想往往是背道而驰的，大二牙就出了点毛病，过上了每周找牙医约会的日子，还好都是些小问题。到大三就摊上大事了，腹痛，治不好，几经周折，两次肠镜，一次小肠镜，从发现症状到确诊整整半年，克罗恩，难治，瘦了十来斤。医院躺了大半个月，这段时间应该是这四年最身心疲惫的时候吧，想了很多，谁才是最在乎你的人？未来怎么过？我又该作何改变？ 步入大四，该找工作了。有点不知所措，投了几家厂都翻车了，实在太菜。试下小一点的吧，跟旭龙在大学城转了一圈又一圈，妈妈网、乐牛、3k、诗悦网络、土巴兔、有伴，一次次满怀希望去面试又一次次希望落空，身体累心更累。眼看即将十月末，投了拉钩上面为数不多还没投的企业，稀里糊涂地拿到了明朝的面试机会，拿到offer那一刻开心得活似个两百斤的胖子。以为校招之旅就此结束了，到明朝实习了有半年吧，没学到多少东西，部门的人都很高冷，很少沟通，运营一直在改需求，日常加班，过得有点累，慢慢产生了离意，请了段时间假准备春招跑去面了几家公司，不知道是不是我有实习经验，感觉面试问的问题比秋招那会深了，自闭了，打算回来好好忍一段时间毕业后再作考虑，回来第二天被大佬约谈了，迟早都要走的，这不是我要待的地方，只是这一天来得有点早，好聚好散吧。那会已经是四月初了，春招差不多完了，看下拉钩剩下的公司寥寥无几了，但还是要尝试的不是吗。有幸拿到翼课的邀面，一面健康大佬问得很细，索引把我撕哭了，二面斌斌抓着我的项目可能遇到的问题来问，高并发队列削峰居然没想出来，大佬们还一直在安慰没关系，确认过眼神，真遇上对的人了。拿到了翼课的offer，当下最好的选择了，直接去吧不考虑了。一直待到现在，同事都挺好的，第一个项目健康大佬就帮我纠正了项目估时的问题，也看了很多很多很多的代码，就消费水平高了一点点有点hold不住，下班也还有点时间做自己想做的事，大概会在这里待挺长时间吧。其实大三上学期就应该准备校招的事情了，然而那会还在敲个鬼的项目代码，机会只有一次，错过了就是错过了，莫得挽回。 思考 对于这几年我还是挺欣慰的，也许没有多少特殊难忘的经历，但至少四年下来，三观还是挺ok的，性格也慢慢往好的方向改变，少了焦躁，多了一分顾虑，但依然还不够，对家人朋友关心还是太少了，也在慢慢学习思考转变。 关于职业选择，如果现在重新让我选择，不再会是计算机了，也许是医学或音乐相关。选医学是因为看过几部医疗相关的纪录片，国内的医疗环境实在让人堪忧，很多很多患者都是怀着医生在害他，坑他钱的想法去看病的，治好了就觉得这是医生应该的，治不好就是庸医，这种想法真的很让人心寒。要知道，偌大的内科医学也就大叶性肺炎能根治，更多的是缓解来控制病情。看完这几部纪录片(《人间世》《生门》《急诊室故事》)莫名有种想去从事医疗相关行业的想法，至少能给国家的医疗出份力吧。还有一个层面就是，受限于传统思想，人应该入土为安，国内的器官移植数量一直升不上去。看了《人间世》关于死亡那集，感觉挂了烧成一把灰，还不如以其他的形式存活着，然后跑去器官捐献网登记了捐献志愿，如果真的不幸有那么一天，也许能造福下其他可怜虫，大概这是这四年参与的比较有意义的关于社会公益的举措吧。而选音乐是因为这四年里面一些不愉快的时光，全靠音乐挺过去，翻开所有时间的听歌排行里面，靠前的每一首后面都有一段值得怀念的回忆和经历，甚至觉得是这世上最好的良药。到大三还产生了学习音乐的冲动，学了口琴，渐渐能吹一些简单的曲调，也遇到了瓶颈，压音死活压不出来有点烦，还需要一点点耐心和时间。未来还会学下钢琴，有那么几首钢琴曲，能亲手弹出来这辈子也值了。 关于家庭未来，是按照老爸老妈期望的路线(努力工作-&gt;买车买房-&gt;结婚生娃)走，做个乖乖仔?抑或者是按以前的想法，每隔几年换个城市长居，这样一辈子下来也跑过很多地方了吧?现在看来，原来的想法还是有点幼稚啊，很大一个问题是，我没有考虑到家庭这个很重要的因素在里面，未来的伴侣愿意这么跟你浪吗，你孩子的读书问题呢。而对老爸老妈的路线，我还是希望有所改变的，在交通发达的一线城市买车怎么算都是一个亏本的选择，于是乎跟老妈谈，而且我tm还居然把老妈谈服了。对于其他，如果没太好的想法，就暂时保持现在的目标，加班吧(逃。爷爷奶奶也快九旬了，能回一趟就回一趟了。 关于友谊，我朋友少是真的，能交心的一巴掌数得过来，但是有那么一两个能畅谈通宵的也就够了。我觉得最好的友谊状态应该像跟果冻一样，无话不谈无话不说毫无掩瞒，对方摇摇尾巴都能知道想干嘛的哪种。可惜我这鬼性格很难再能交到这样的基佬了，需要改变，不久的将来还需要投入更广泛的社交圈子里。 关于爱情，跟相仪的女生相处更加小心翼翼了，树钊说得对，我还是太怂了，心态还没调整过来，始终没法先当作普通朋友对待，在对方面前始终没法做到随性。先这样缓着吧，给我一些时间好好重新审视思考再做调整，绝不能犯着同样的错误了。 ​ 关于这四年，认识了些人，经历了些事，学了点东西，眼界远了那么一点点，头发掉多几根，仅此而已。 展望 我不太认同那些对未来规划得一清二楚的做法，甚至面试被问未来职业规划时也是按套路应付式地说一下。要明确的一点，计划永远跟不上变化，人是善变的。我不能保证几年后我是否还在搞互联网搞开发，或许真说不定回家卖肠粉了呢。但每每想到五年前“我打死都不会考五邑大学”的flag，有点意思，人生本来就是一个不断立flag和打脸的过程，甚至有点享受打脸的感觉，毕竟在打脸的过程中，观念有所改变了，至少是有长进了。所以，有那么几个flag，先立为敬，如果做到了，我很满意，打脸了，再接再厉： 搞部电钢琴 三个月内 学golang 一年内 看完高性能MySQL 一年内 体重增到70kg 两年内 带爸妈去趟北京 三年内 听一场鲁叔的音乐会 五年内 看一场朴师傅的演唱会 五年内 履行跟果冻的川藏骑行之约 十年内 全家定期体检 每年 最后 愿我们持独立思考，不卑不亢不怂，长成自己想要的样子 —— 独立菌儿 该见的人也都见完了，所有念想和遗憾也埋在这，后面的路还很长。朋友，江湖见。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"http://blog.jmtung.cn/tags/生活/"},{"name":"总结","slug":"总结","permalink":"http://blog.jmtung.cn/tags/总结/"}]},{"title":"并查集优化","slug":"并查集优化","date":"2018-09-05T14:49:10.000Z","updated":"2019-06-04T17:05:40.701Z","comments":true,"path":"2018/09/05/并查集优化/","link":"","permalink":"http://blog.jmtung.cn/2018/09/05/并查集优化/","excerpt":"接口123456// 并查集容量 int getSize();// 两元素是否有关联 boolean isConnected(int p,int q);// 两元素建立关联 void unionElements(int p,int q); 原始实现基于顺序表存储，键代表某数值，值表示该数值所在的集合。12345678910111213141516171819202122232425262728293031323334353637383940public class UnionFind1 implements UnionFind &#123; private int[] id; public UnionFind1(int size)&#123; id=new int[size]; for (int i=0;i&lt;id.length;i++) id[i]=i; &#125; @Override public int getSize() &#123; return id.length; &#125; private int find(int p)&#123; if (p&lt;0||p&gt;=id.length) throw new IllegalArgumentException(\"p is out of limit.\"); return id[p]; &#125; @Override public boolean isConnected(int p, int q) &#123; return find(p)==find(q); &#125; @Override public void unionElements(int p, int q) &#123; int pID=find(p); int qID=find(q); if (pID==qID) return; for (int i=0;i&lt;id.length;i++) if (id[i]==pID) id[i]=qID; &#125;&#125; 效率由于使用数组索引查找元素，查找时间复杂度为O(1)，合并需要遍历整个数组，时间复杂度为O(n)","text":"接口123456// 并查集容量 int getSize();// 两元素是否有关联 boolean isConnected(int p,int q);// 两元素建立关联 void unionElements(int p,int q); 原始实现基于顺序表存储，键代表某数值，值表示该数值所在的集合。12345678910111213141516171819202122232425262728293031323334353637383940public class UnionFind1 implements UnionFind &#123; private int[] id; public UnionFind1(int size)&#123; id=new int[size]; for (int i=0;i&lt;id.length;i++) id[i]=i; &#125; @Override public int getSize() &#123; return id.length; &#125; private int find(int p)&#123; if (p&lt;0||p&gt;=id.length) throw new IllegalArgumentException(\"p is out of limit.\"); return id[p]; &#125; @Override public boolean isConnected(int p, int q) &#123; return find(p)==find(q); &#125; @Override public void unionElements(int p, int q) &#123; int pID=find(p); int qID=find(q); if (pID==qID) return; for (int i=0;i&lt;id.length;i++) if (id[i]==pID) id[i]=qID; &#125;&#125; 效率由于使用数组索引查找元素，查找时间复杂度为O(1)，合并需要遍历整个数组，时间复杂度为O(n) 树实现基于数组构建树，数组键表示元素本身，值代表指向的父节点索引，该树与平时的树结构不同，由子节点指向父节点，代表着子节点与父节点是关联的关系，树的根部则指向自身。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253public class UnionFind2 implements UnionFind &#123; // 使用一个数组构建一棵指向父节点的树 // parent[i]表示第一个元素所指向的父节点 private int[] parent; // 构造函数 public UnionFind2(int size)&#123; parent = new int[size]; // 初始化, 每一个parent[i]指向自己, 表示每一个元素自己自成一个集合 for( int i = 0 ; i &lt; size ; i ++ ) parent[i] = i; &#125; @Override public int getSize()&#123; return parent.length; &#125; // 查找过程, 查找元素p所对应的集合编号 private int find(int p)&#123; if(p &lt; 0 || p &gt;= parent.length) throw new IllegalArgumentException(\"p is out of bound.\"); // 不断去查询自己的父亲节点, 直到到达根节点 // 根节点的特点: parent[p] == p while(p != parent[p]) p = parent[p]; return p; &#125; // 查看元素p和元素q是否所属一个集合 // 判断两元素是否连接只需对比两节点的根节点，若根结点相等，则说明两节点是同一集合，否则不在同一集合内。 @Override public boolean isConnected( int p , int q )&#123; return find(p) == find(q); &#125; // 合并元素p和元素q所属的集合 // 合并两节点集合很简单，只需把其中一个节点的根节点指向另一节点的根节点即可 @Override public void unionElements(int p, int q)&#123; int pRoot = find(p); int qRoot = find(q); if( pRoot == qRoot ) return; parent[pRoot] = qRoot; &#125; 效率在该树中采用迭代的方法查找根节点，查找效率是跟树的高度相关的，因此查找复杂度O(h)，同样地，合并集合也调用到find()函数进行根节点查找，而具体合并代码parent[pRoot] = qRoot;时间复杂度为O(1)忽略不计，综上，合并时间复杂度为O(h) 基于size的优化一般地，在树结构中，当我们合并两个集合时，我们更愿意把元素较少的集合合并到元素更多的集合，因为如果把元素更多的集合合并到更少的集合上，会导致元素多的集合查中所有元素对根节点的查找效率增多一层，所以，一般把元素少的集合合并到多的集合上，这样对查找效率上的”损失”更少因此我们对树上每个节点维护一个size来记录以当前节点为根的树的子节点数目，此后只须在合并集合时对size字段进行维护， 1234567891011121314151617181920212223242526272829303132333435 private int[] sz; // 构造函数 public UnionFind3(int size)&#123; parent = new int[size]; sz = new int[size]; // 初始化, 每一个parent[i]指向自己, 表示每一个元素自己自成一个集合 for(int i = 0 ; i &lt; size ; i ++)&#123; parent[i] = i; sz[i] = 1; &#125; &#125; @Override public void unionElements(int p, int q)&#123; int pRoot = find(p); int qRoot = find(q); if(pRoot == qRoot) return; // 根据两个元素所在树的元素个数不同判断合并方向 // 将元素个数少的集合合并到元素个数多的集合上 if(sz[pRoot] &lt; sz[qRoot])&#123; parent[pRoot] = qRoot; sz[qRoot] += sz[pRoot]; &#125; else&#123; // sz[qRoot] &lt;= sz[pRoot] parent[qRoot] = pRoot; sz[pRoot] += sz[qRoot]; &#125; &#125; 效率对输入容量为10000的并查集，进行10000次合并集合和查询关联操作的耗费时间对比 基于rank的优化上一节的优化基于size，但子节点数多不代表树高，因此另一种优化思路是基于rank树高度优化，维护一个rank数组记录以每个节点为根的子树的高度。合并时对比两树高度，矮树向高树合并 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647private int[] rank; // rank[i]表示以i为根的集合所表示的树的层数private int[] parent; // parent[i]表示第i个元素所指向的父节点// 构造函数public UnionFind4(int size)&#123; rank = new int[size]; parent = new int[size]; // 初始化, 每一个parent[i]指向自己, 表示每一个元素自己自成一个集合 for( int i = 0 ; i &lt; size ; i ++ )&#123; parent[i] = i; rank[i] = 1; &#125;&#125; private int find(int p)&#123; if(p &lt; 0 || p &gt;= parent.length) throw new IllegalArgumentException(\"p is out of limit.\"); // 不断去查询自己的父亲节点, 直到到达根节点 // 根节点的特点: parent[p] == p while(p != parent[p]) p = parent[p]; return p;&#125; @Overridepublic void unionElements(int p, int q)&#123; int pRoot = find(p); int qRoot = find(q); if( pRoot == qRoot ) return; // 根据两个元素所在树的rank不同判断合并方向 // 将rank低的集合合并到rank高的集合上 if(rank[pRoot] &lt; rank[qRoot]) parent[pRoot] = qRoot; else if(rank[qRoot] &lt; rank[pRoot]) parent[qRoot] = pRoot; else&#123; parent[pRoot] = qRoot; rank[qRoot] += 1; // 只有在两树高度相等时维护高度值+1 &#125;&#125; 路径压缩优化isConnected()和unionElements()函数都需要调用私有的find()函数查找根节点，而最影响查找性能的是树的高度，因此应该设法从压缩树高度上提高效率。路径压缩是一种不错的实现思路:由于find()函数对根节点的查找是一个迭代的过程，我们可以在该查找过程中进行路径压缩:除根节点外每个节点指向其父节点的父节点，就是说爷爷瞬间变成我老爸，老爸变成我兄弟。如图为对1-&gt;4-&gt;5-&gt;2的路径压缩 代码实现:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263public class UnionFind5 implements UnionFind &#123; // rank[i]表示以i为根的集合所表示的树的层数 private int[] rank; private int[] parent; // parent[i]表示第i个元素所指向的父节点 // 构造函数 public UnionFind5(int size)&#123; rank = new int[size]; parent = new int[size]; // 初始化, 每一个parent[i]指向自己, 表示每一个元素自己自成一个集合 for( int i = 0 ; i &lt; size ; i ++ )&#123; parent[i] = i; rank[i] = 1; &#125; &#125; @Override public int getSize()&#123; return parent.length; &#125; // 查找过程, 查找元素p所对应的集合编号 private int find(int p)&#123; if(p &lt; 0 || p &gt;= parent.length) throw new IllegalArgumentException(\"p is out of limit.\"); while( p != parent[p] )&#123; parent[p] = parent[parent[p]]; p = parent[p]; &#125; return p; &#125; // 查看元素p和元素q是否所属一个集合 @Override public boolean isConnected( int p , int q )&#123; return find(p) == find(q); &#125; // 合并元素p和元素q所属的集合 @Override public void unionElements(int p, int q)&#123; int pRoot = find(p); int qRoot = find(q); if( pRoot == qRoot ) return; // 根据两个元素所在树的rank不同判断合并方向 // 将rank低的集合合并到rank高的集合上 if( rank[pRoot] &lt; rank[qRoot] ) parent[pRoot] = qRoot; else if( rank[qRoot] &lt; rank[pRoot]) parent[qRoot] = pRoot; else&#123; parent[pRoot] = qRoot; rank[qRoot] += 1; // 只有在两树高度相等时维护高度值+1 &#125; &#125; 极致路径压缩其实我们最想看到的情况是这样 在这种情况，这样我们子节点的搜索效率都是O(1)级别，实现思路是在find()查询根节点时把所有节点指向根节点，实现代码: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859private int[] rank;private int[] parent; // parent[i]表示第i个元素所指向的父节点// 构造函数public UnionFind6(int size)&#123; rank = new int[size]; parent = new int[size]; // 初始化, 每一个parent[i]指向自己, 表示每一个元素自己自成一个集合 for( int i = 0 ; i &lt; size ; i ++ )&#123; parent[i] = i; rank[i] = 1; &#125;&#125;@Overridepublic int getSize()&#123; return parent.length;&#125;// 查找过程, 查找元素p所对应的集合编号private int find(int p)&#123; if(p &lt; 0 || p &gt;= parent.length) throw new IllegalArgumentException(\"p is out of limit.\"); // path compression 2, 递归算法 if(p != parent[p]) parent[p] = find(parent[p]); return parent[p];&#125;// 查看元素p和元素q是否所属一个集合@Overridepublic boolean isConnected( int p , int q )&#123; return find(p) == find(q);&#125;// 合并元素p和元素q所属的集合@Overridepublic void unionElements(int p, int q)&#123; int pRoot = find(p); int qRoot = find(q); if( pRoot == qRoot ) return; // 根据两个元素所在树的rank不同判断合并方向 // 将rank低的集合合并到rank高的集合上 if( rank[pRoot] &lt; rank[qRoot] ) parent[pRoot] = qRoot; else if( rank[qRoot] &lt; rank[pRoot]) parent[qRoot] = pRoot; else&#123; parent[pRoot] = qRoot; rank[qRoot] += 1; // 只有在两树高度相等时维护高度值+1 &#125;&#125; 性能对后4种并查集,输入容量千万，进行一千万次合并集合和查询关联操作的耗费时间对比","categories":[],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://blog.jmtung.cn/tags/数据结构/"}]},{"title":"记录下这半年的求医经历吧","slug":"记录下这半年的求医经历吧","date":"2018-08-08T11:24:44.000Z","updated":"2019-06-29T15:41:09.909Z","comments":true,"path":"2018/08/08/记录下这半年的求医经历吧/","link":"","permalink":"http://blog.jmtung.cn/2018/08/08/记录下这半年的求医经历吧/","excerpt":"出现症状年前立了个flag:过完年要胖10斤，年初八左右称了下，63公斤，中了6斤，有点小兴奋，没想到几个月后长的这些不但都没了，还倒削了几公斤开学前一周，还在家，发现大便有点异样，没太在意，对新学期有太多期望，希望自己的一系列计划都能实现","text":"出现症状年前立了个flag:过完年要胖10斤，年初八左右称了下，63公斤，中了6斤，有点小兴奋，没想到几个月后长的这些不但都没了，还倒削了几公斤开学前一周，还在家，发现大便有点异样，没太在意，对新学期有太多期望，希望自己的一系列计划都能实现 初看门诊 三月初，开学两周，连续拉肚子一周，平时最见效的腹可安片都止不住。感觉情况不妙，找校医，给开了双歧杆菌，健胃消食片，腹可安片，依然无效。跟朋友和家人沟通情况，去了人民医院挂了消化科门诊，第一次去大医院看病甚至有点小激动，门诊主要由两个主任轮流坐诊，轮到我，简单描述下症状，因为刚过完年，患肠胃炎来看病的不少，医生按经验开了个礼拜药先吃着看看，回去吃了两三后没拉肚子了，但大便稀软黄黑相间，我认为好得差不多了，百度搜着大便情况自己去药店买了两盒肠炎宁，吃了没用，还是乖乖找医生吧。又去了趟医院，医生开两周药，并被告知下次没好再来就给我开个肠镜检查下了，当初自认为吃完这药就好了，肠镜那些没太在意，这波回去又有新情况，肚子会无端端痛起来，不同于拉肚子的那种瞬间剧痛，像用辣椒粉撒在伤口上那样，尤其是卧床睡觉，晚上常常会痛到一两点才入睡，开始在网上搜索肠镜相关 接受肠镜检查是一种怎么样的体验?当初看到这里面的回答吓得一愣一愣的,药已经吃完了，思考良久，也罢也罢，小命要紧，也就当作人生新体验吧，第三次去门诊，依然13号室 “医生给我开个肠镜吧”没麻醉，500块，还行开学第一周称了体重，60公斤多一点点，吐槽益华的秤是假的。 第一次肠镜肠镜前天只让吃流质，在三饭点了碗不要皮蛋瘦肉的皮蛋瘦肉粥和一碗菜干粥(这辈子打死都不会再点这的菜干粥了，苦的!)，饭堂阿姨投来异样的眼光。晚上8点禁食。晚上10点开始喝泻药，这泻药呢，长下面那样，叫复方聚乙二醇电解质散,大概是我这辈子喝过最难喝的东西，三包泡四杯750ml的水,2小时内喝完 起初以为给人喝的东西味道不会差到哪去，第一口下去，味道还行，有一点轻微的凤梨味，几口下去后，我草这简直是咸的铁锈水啊，后面两杯我也不知道怎么喝下去的，其中一杯药粉下多了浓度有点高，吐了两口，泻药的效果还是很明显的，那晚折腾到凌晨三点半，一盒抽纸用光了，奄奄一息睡了两三个小时闹钟蹦醒又奔去医院做镜。 内镜室一早就来了些病人，脸色不太好一看就知道昨晚没睡好(别问我怎么知道的)。换好穿档裤后进去做镜了，做镜的医生小哥很年轻30岁那样，隔壁还有一群护士和助理阿姨(为什么都是女的!???)，羞耻片段跳过，最痛苦的时候，是在那根管在你肠道绕弯的时候，像针扎的刺痛，忍不住喊着痛，隔壁助理阿姨一直在安慰我忍一下深呼吸就好，镜子来到了一处直角弯死活过不去，阿姨开始摁我肚子帮助管子通过，医生吐槽道“靓仔你的肠有点曲啊”，阿姨见单手摁压没用，开始用双手使劲，在我的镜头角度看，阿姨这姿势像是准备给我肚子做心肺复苏???肚子本来就痛得要命，阿姨这一按妈耶我胆汁都吓出来了，然后平时不存在的八块腹肌突然团聚成一块跟阿姨的如来神掌抗衡。阿姨就开始训我叫我别撑着不然镜子过不了，然而我也是控记不住我记几啊，不知过了多久管子终于完成了一个完美的直角飘移过弯。 “靓仔，你结肠里面有两处烂了要不要剪去做病理化验呀，一处一百多块” “剪剪剪”退镜，检查结束扶着腰出来等候室坐了半个小时，腹部一直隐隐作痛，不停的放屁，等没那么痛了去外面吃了碗有皮蛋瘦肉的皮蛋瘦肉粥 真香! 肠镜检查诊断乙状结肠炎，回盲瓣糜烂。拿着报告给门诊医生看“这病问题大吗?”“不大，开一个月药吃，再回来复诊”a此时四月末，做完肠镜几天后称了体重，58.5公斤 第二次肠镜主任还是很牛逼的，开的药吃了三天，肚子再也没有任何不适了，预感着病快好了，吃饭什么的更香了。很不幸，一个月后，我又出现在了门诊大楼二楼13室内，肚子是不痛了，但大便稀烂不成型，体重也一直在降，主任我又想你了。开一周药，并被告知如果还不好，可能问题不只是出在结肠上了，更坏的情况是小肠也gg了，得考虑做小肠镜，又蒙圈了。还有个情况，这波看医生前，动车上吃了两罐泰奇八宝粥，到酒店后，极度不适，躺了很久很久才舒缓过来，八宝粥是贼难消化的，甚至怀疑小肠病变在这之前就有了。科普一下，我做的两次肠镜都指的是纤维结肠电子镜检查，局限于大肠，而大肠之上的小肠普通的肠镜是不能够进入检查的，毕竟小肠很脆弱，一言不合就会捅穿出孔，而现今检查小肠主要是通过小肠镜，胶囊内镜，小肠增强CT等方法，小肠镜分经肛和经口两种，对操作者技术要求很高，不然一言不合就捅个并发症，但对检查小肠来说，小肠镜是相对比较全面的检查方式。死命查相关资料，在人民医院官网上面查费用，OMG，双气囊小肠镜一次4k，经肛和经口算两次,double kill!而且，这只是单单做内镜检查的费用，麻醉材料治疗的什么乱七八糟的都没算然后刚好那时没什么课回家，跟家人沟通，老妈听到费用和看我这么久没好，想叫我去开平的中心医院看，说有个医生看肠胃很好的balabala的。拒绝。一周后“医生，现在大便依然不成型”“再做个肠镜吧，看下旧患好了没，好了的话就考虑做小肠镜”此刻满脑子复方聚乙二醇电解质散“医生，上次那泻药太难喝了，能不能换种”“OK！No趴笨!”内镜室的小姐姐又拿出那个大水杯“8点吃药，12点前喝6杯白开水”“。。。”又是难熬的一天，喝流质，玫瑰园的白粥是真的白粥，连盐都不下!吃吐了。吃了药，第一第二杯水，勉强灌下，第三杯就不行了。就像吃鸡扒一样，一份好吃，但要求你2个小时内吃6份，你不投降，胃也先举白旗了。然后，那晚，我等到11点，没反应，大概吃了假药???然后11点半到12点多，上了三次厕所，然后就没了没了了我屯好的纸巾似乎在嘲笑我次日，内镜室，肠道准备不充分，重新清肠道“医生，再给我开一剂泻药吧，我要复方聚乙二醇电解质散，上次开的泻药没凑效”“OK！No趴笨!”复方聚乙二醇电解质散就是牛逼，一泻千里，但没有增强我对它的好感，再一次阳台数星星给我做镜的依然是那位年轻的医生小哥，还好隔壁的助理不再是阿姨了，是位年轻点的小姐姐还是原来的痛感，还是原来的腹胀，但这次没痛到喊，大概已经习惯了吧?小姐姐手法很温柔，管子一下子就漂移入弯。用户体验良好。“剪吗”“剪!”退镜，检查结束。肠镜检查诊断:回盲瓣慢性炎症 乙状结肠痊愈了 (手动埋个伏笔 回盲可以理解为大肠和小肠的交接部位 不要慌，问题还tm不是很大)“开一周药 没好转可以考虑小肠镜”“OK！No趴笨!” 六月末，考试月到了，称下体重，55公斤，比木杰兄轻，略崩溃 医保啊医保七月，剩毛概没考了，回家吃点清淡的补补，顺便把医保的转诊给办理了，老爸给我医保定点的医院的医生打电话询问转诊手续，被告知在那里办不了，得去中心医院，我又经过网上查询，发现一般医院不会随便给你办转诊。药吃完了，没好转，打算过两三天回江门找主任玩耍。记得好像时周五早，便血，后两天持续腹痛，站起来就有拉肚子的感觉，老妈见到情况，方了，叫我赶紧回去找医生，做什么检查花多少钱都好，尽早。 回江门，医生推荐住院做小肠镜，跟医生和家人多次沟通决定，考完试就住院做检查。考完最后一门毛概就溜回小开平，次日到开平市中心医院挂个内科的号找医生开转诊证明 “医生你好，我在江门的医院做了检查balabala，现在江门的医生建议我做个小肠镜查清楚，但是小肠镜只有在蓬江的三家医院有得做，医生叫我回来找你们开个转诊证明好减少下治疗费用的负担”“没有这个东西写” 好吧我信了，断然离开。不甘心，去社保局问工作人员 “转诊是有的，不过你要找医生写个证明给我们就能办理了”“可是我找医生，他说没这个东西写”“这就不知道了，这个医生说了算的”好的，我滚 解释下转诊和为什么多数医生不让写转诊。 经低级别医院诊断，因病人病情过于严重超出本院医治能力或者因本院设备或技术原因无法为患者提供相应治疗而转向高级别医院进行治疗，这时就用到转诊了。可能有人问不办转诊直接转去行不行啊，当然行啊！报销比例降50%而已。转诊需要多人签名盖章，所以办理巨麻烦，除非病情很严重或者找关系。政府文件白底黑字写明有这个制度，开平市中心医院那位医生何必撒这谎呢，直接拒绝不就得了。 一般多数医生不会轻易给你写转诊，原因有二： 虽说医保扣的是国家的钱，但是医院科室都被划好了报销额度，如果某个时期的额度超了会扣工资的，而且，如果我办了转诊，去江门看病，看病报销那部分还是归属开平中心医院的，这相当于开平中心医院给钱我去江门看病，亏本生意，做不得。除非真的有危急病人要转诊，或者找关系，一般都不会给你开。 你这病在本院治不好，得跑去其他医院治疗，有点打本院脸的意思，就是医疗技术还是相对落后。 而经此事，让我气愤的主要是开平的医生对我撒了谎，以及，我买了医保，却没有享受到应有的权力，我满足了转诊的条件却办不了转诊，很无力。也罢，回江门，入院。 小肠镜入院第二天早，各种检查，护士姐姐拿着一捆试管(参考下捆装火腿肠)来抽血，抽完手都麻了，主治医生带个实习医生姐姐来问病情，实习医生各种掐按，酸爽。住院部什么病人都有，虽然写着消化内科住院部，各种癌，败血症，把肚子喝成孕妇样吵着找医生办出院的也有，然而像我一样年轻的还没见到。预约周一小肠镜，清肠的缘故，周日中午点了份瘦肉粥，瘦肉给了木杰吃了，他刚吃完，医生来电话，白细胞高，推迟小肠镜，我丢，木杰赶紧把瘦肉吐出来。后面一周每天早上去吊针水消炎降白细胞。次周，医生来电，复查白细胞正常，具备条件做镜，预约次日小肠镜。大概医生们发现单纯的复方聚乙二醇电解质散清肠道效果不佳，现在改成番泻叶+复方聚乙二醇电解质散双管齐下。周日那天喝了一下午番泻叶，许久没效果，又怀疑是假药，放心去喝粥，刚点了份白粥，好家伙，肚子绞痛，忍忍，喝两口粥，不行了 “阿姨我的粥别倒掉!我等下回来喝!”阿姨一脸茫然.jpg 晚上八点上一包复方聚乙二醇电解质散，有了上三次喝泻药的教训，买了几颗棒棒糖，喝到想吐的时候舔一舔，效果还不错，不过别买凤梨味的，凤梨味很容易又让你联想起复方聚乙二醇电解质散的味道(吐)。看着明天台风到了，天气不太行，早早洗澡去医院睡，这天是7月22日，这时才是真正意义的住院。特意调了5点多的闹钟，因为第二天早6点还要来两剂泻药，没想到，比闹钟还早的，是护士姐姐，熟睡中被人拍醒，扎了一针，一脸懵逼。打水冲泻药，雾草!医院的水全是沸的，没有温的。7月23日凌晨5.30，阴天，有个穿着短裤拖孩手臂上还扎着留置针的疯子骑着hellobike在找美宜佳，终于，靠地王那边找到了一间，两大瓶康师傅，付款时老板看我眼神似乎有点不对劲，我没艾滋、不吸毒。药效还行，泻个不停。9点钟，医生例行查房，简单问下情况，9点多，老妈来了，看着我肚子说一点肉都没，也就少了几块肌肉而已。吊着葡萄糖和转化糖，之后就是漫长的等待。 12点半，护士来通知了，可以下去了，并把一管针绑手臂扎进留针里，这一剂应该是麻药之一。内镜室，老地方，麻醉医生拉进去签字，家属也要签，告知风险。身边一位位患者都进去了，啪一下门打开了，一个熟悉的身影在眼前走过，没戴眼睛看不清，然后里面的助手阿姨叫了声：“周光平，你终于来了!”。惊!给我做镜的医生也是我的主治医生，还是那个室，这次围的人更多了，各种护士助手，头前站着麻醉医师，还有其他消化内科的医生站隔壁看，周医生把老妈叫进来，签名，告知风险，再跟我确认，告知风险，无误，开工。麻醉医师给我贴满电极，检测生命体征，左侧躺，屈腿，麻醉医师给我罩上一个呼吸面罩，吸了两三口，咦，我没睡耶嘻嘻嘻，还在想着麻醉医师要用什么方法把我弄睡，还在思考护士怎么把那两个大大的圈圈(牙塞?)塞进我的嘴，然后没意识了，像什么事情都没发生那样。 隐隐意识到到有人在推我走(后来据我妈说我被推出来时一直在念abc???)，下午五点多做完，完全醒来应该是晚上六七点那样，舌头很麻，喉咙很干很痛，妈在床前，鼻插着氧气，各种电极量压器都在，吊着中午没有吊完的针水，护士又拿来几包针水。将近四个小时的全麻，晚上一直处于睡醒睡醒的迷糊状态，禁食，水也不能喝，针水吊多了，明显感到膀胱有尿液却尿不出来，非常难受，那晚我妈也没睡好，老被我和检测机叫醒，隔壁床老叔估计也陪我通宵了。 你好呀 克罗恩7月24早，有点精神了，第一时间拿起手机，看检查结果慢性浅表性胃炎伴糜烂(窦)、十二指肠炎症、小肠多发性溃疡、回盲瓣溃疡牛逼啊，从胃坏到大肠，难怪两次的结肠镜子回盲瓣一直好不了，最严重的溃疡在下接回盲瓣的回肠。同时心头一凉，这描述越看越像之前了解过的可能的疾病的一种 —— 克罗恩(CD)，尤其是小肠多发溃疡，问题似乎有点大，然后混迹各种肠道炎症疾病贴吧，越看越方。医生查房，问下基本情况，也没啥因做镜引发的并发症。“医生，我儿子这病严重吗?”“何为之严重?癌症吗?”“emm……”“这倒没有，不过这病挺棘手的，不易治好，我们医生也比较头疼的，再等等送去广州的病理化验结果吧”（这时医生在排除了）不好治愈。。。越听越像克25日 能勉强短距离活动，让吃东西，白粥都很香26日 出病房门瞅一眼，看远一点，感觉每块砖都在跳动，赶紧回去躺，本院的病理活检出，中度慢性炎，肉芽组织增生27日 医生查房，待观察，等广州病理结果 能出门吃东西了，不过还是有点晃，回来的路上好多了28日 广州病理结果出(后来看单子应该是查结核的)，阴性，医生再让去结核防治中心查下ppd（这时应该排除剩下肠结核和克罗恩了）31日 ppd结果正常 量体重 53kg 过年到现在 20斤没了，瘦的主要原因是小肠有溃疡导致吸收能力下降，同时多处炎症，能量花去打仗消炎了“医生，现在大概能排除掉肠结核了吧”“嗯”试探性地问：“能大概确诊是什么病了吗”医生说出了我这辈子最讨厌的三个字。初诊克罗恩。医生找主任商量开药8月1日 张主任过来查床，说明主治的诊断没有问题，并解释说明这病没有特效药balabala的，类克也不考虑了毕竟一针6k，激素也不考虑了毕竟我太年轻，美莎拉秦了解一下?好的。老妈一脸懵逼，我还要再解释一趟，划明重点这不是绝症，我发现得早，不虚。3号 验血正常 不打针了 劝老妈回家了4、5、6、7请假回学校待 每天早去领药 顺便称下体重 发现开始反弹!8号 就是今天，一切指标正常，但需要长期服药抑制，医生给办出院了 量体重 54kg财务结算 2w9 医保给报了1w左右 说不痛都是假的 克也非绝症，也不会影响我的寿命，只是像高血压类的疾病一直在你身边，它心情好的时候我可以过得很滋润，它心情不好的时候我的肠道偶尔闹闹小脾气之类的。病因不明，诊断靠排除，排剩那个就是克罗恩，运气差一点不小心就得了（中国发病率十万分之一），万幸的是我发现得早，病情在初期，吃药主要是增长我的缓解期，靠吃药抑制再管住自己的嘴巴别瞎吃东西并不会影响我的生活，其实我幸运得多，加过一些患者群，有十几岁确诊的，有中后期患者靠鼻饲维持生活的，更严重的，肠梗，切除部分肠道，做造口，像我这种就瘦个几斤便软能跑能跳还能敲几行代码的更应该庆幸吧。国外的主要治疗方案是降阶梯治疗，开始上猛的生物制剂（类克），病情好转后改用传统口服药物抑制，而国内的治疗理念大概是升阶梯，先上小的，不行在一步步上猛的，毕竟穷嘛。。。一年类克10w+还没医保又有多少人抗得住呢。也见过症状像我一样小肠多发溃疡确诊小肠CD的，吃四个月美莎回去复查溃疡全好了，诊断改为肠易激，也希望我能像这位兄得一样幸运吧。一切随时间去验证。 感谢江人消化内科的医护人员都贼好人的，说话又好听，每个护士姐姐都想娶回家的样子(逃谢谢老妈老爸还有临夜来看我的亲戚谢谢给我送衣物和生活用品来的木杰兄 感悟身体长时间出异样，趁早就医吧，就医不可怕，可怕的是你纠结就医耽误的最佳治疗时间在你掌握的医疗知识不比医生多的时候，请完全信任你的主治医生，如果你不能信任你的医生，换吧在外工作无论如何，请为你自己买一份医保，定个好医院，如果经济收入充裕的话，再来份商业大病险（尤其考虑给父母卖）。小病国家可以搞定，大病真要来的时候靠国家的医保有时扛都扛不起。住院这段时间见过太多喝酒喝坏肠胃的，酒要少沾注意饮食是真的 未完待续 长期记录8.29 出院后回家两周养老，美莎(莎尔福)+食疗，饮食注重低脂低纤维高蛋白，遵医嘱禁食牛奶，豆类也暂时不太敢碰，辛辣更是不可能的，照网上患者饮食推荐，咖喱焖土豆效果还不错，作死吃了顿海鲜不到两小时就翻车了，拉肚子。复查血液正常，主任告知药不能停还要长时间服用，自出院后体重增了1kg左右，后面就是每两周去挂号取药。暂时对生活没多大影响，有点苦逼的是药要在餐前一小时服用，每一顿饭都要算好时间吃，特别刚开学还有一个月早上8点开始上的课，每天要6点多起吃药，另一方面也帮我养成早睡早起的好习惯不是吗TAT。回到学校饮食有点难控制，饭堂阿姨偷偷在某个菜里加了辣都不知道，还睁着眼指着份有辣油的小炒说不辣的，大概是个四川人。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"http://blog.jmtung.cn/tags/生活/"}]},{"title":"php静态属性的继承","slug":"php静态属性的继承","date":"2017-08-31T13:13:55.000Z","updated":"2019-06-04T17:05:22.606Z","comments":true,"path":"2017/08/31/php静态属性的继承/","link":"","permalink":"http://blog.jmtung.cn/2017/08/31/php静态属性的继承/","excerpt":"","text":"若子类没有重写父类的静态属性,子类对静态属性的改动都会影响其父类和其他子类的静态属性 1234567891011121314151617181920212223242526272829303132&lt;?phpclass StaticVariableInheritance&#123; protected static $instance; public static function setInstance($ins) &#123; static::$instance = $ins; &#125; public static function getInstance() &#123; return static::$instance; &#125;&#125;&lt;!-- more --&gt;class Sub1 extends StaticVariableInheritance &#123;&#125;//--------------------------子类的静态属性会影响父类的静态属性--------------------------//Sub1::setInstance('jm');echo StaticVariableInheritance::getInstance().\"\\n\";// jmecho Sub1::getInstance().\"\\n\";// jm//--------------------------子类的静态属性也会影响其他子类的静态属性--------------------------//class Sub2 extends StaticVariableInheritance&#123;&#125;Sub2::setInstance('jmtung');echo StaticVariableInheritance::getInstance().\"\\n\";// jmtungecho Sub1::getInstance().\"\\n\";// jmtungecho Sub2::getInstance().\"\\n\";// jmtung 若子类重写了父类的静态属性,该静态属性只属于当前类,对父类或其他子类没有影响 12345678910111213141516171819202122232425262728293031&lt;?phpclass StaticVariableInheritance&#123; protected static $instance; public static function setInstance($ins) &#123; static::$instance = $ins; &#125; public static function getInstance() &#123; return static::$instance; &#125;&#125;class Sub1 extends StaticVariableInheritance &#123; protected static $instance;&#125;Sub1::setInstance('jm');echo StaticVariableInheritance::getInstance().\"\\n\";// jmecho Sub1::getInstance().\"\\n\";// nullclass Sub2 extends StaticVariableInheritance&#123; protected static $instance;&#125;Sub2::setInstance('jmtung');echo StaticVariableInheritance::getInstance().\"\\n\";// jmecho Sub1::getInstance().\"\\n\";// jmtungecho Sub2::getInstance().\"\\n\";// null","categories":[],"tags":[{"name":"php","slug":"php","permalink":"http://blog.jmtung.cn/tags/php/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-01-20T13:16:20.000Z","updated":"2018-02-10T13:20:37.384Z","comments":true,"path":"2017/01/20/hello-world/","link":"","permalink":"http://blog.jmtung.cn/2017/01/20/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}